spincounting script 
Version: v0.9.3
Author:  Christopher Engelhard
Date:    2014-02-12


SYNTAX:
spincounting
nspins = spincounting
nspins = spincounting('Option', Value, ...)
nspins = spincounting(paramstruct)
[nspins tfactor q dintnorm dint] = spincounting(paramstruct) 

INPUTS:
All top-level parameters can be given as either Option-Value pairs or in the form of a struct.
The full list of parameters is:

paramstruct
           .tunefile			: Tune picture file, default: Prompt
           .specfile			: Spectrum file, default: Prompt
           .outfile				: Filename under which to save output, default: Prompt
           .nosave              : boolean, don't save anything if true, default: false
           .nspins				: # of spins in sample, default: false
           .tfactor				: spectrometer transfer factor, default: false
           .q					: quality factor q. Setting this disables all q-factor 
                                   calculation related functionality, default: false
           .S					: spin of sample, default: 1/2
           .maxpwr				: maximum microwave power, default: 200mW
           .tunepicscaling		: scaling of the tune picture in MHz/s, default: 6,94e4
           .qparams				: parameters passed on to FitResDip
                   .background	: indices of background, default: auto
                   .smoothing	: # of points used for smoothing, default 2.5% of total
                   .order		: order of background correction used, default 3
                   .dipmodel	: model used for dip fitting, default: lorentz
           .intparams			: parameters passed on to DoubleInt
                     .background: indices of background, default: auto
                     .order		: order of background correction used, # of elements
								  determines # of steps, default [3 3]

More detailed descriptions of qparams, intparams in their respective functions.

OUTPUTS:
nspins:   calculated number of spins (only returned for if tfactor is given)
tfactor:  calculated transfer factor (only returned for if nspins is given)
q:        quality factor of the cavity
dintnorm: double integral of background-corrected spectrum, measurement parameters taken into account
dint:     double integral of background-corrected spectrum, raw



USAGE:
The script takes a cw-EPR spectrum and calculates the absolute number of spins in the sample from it, taking into account the various factors like modulation amplitude/microwave power etc. that influence the apparent intensity. The script can be run fully interactively with no parameters needed as well as fully integrated into external MATLAB scripts.

Two of the factors impacting signal intensity cannot be read from the measurement parameters:
The q-factor, which is a function of the resonator and the spectrometer transfer factor, the proportionality between number of spins and parameter-corrected spectral intensity as detected by the spectrometer, which is a function of the spectrometer/resonator used.
The q-factor the script determines by fitting and measuring the dip passed to it in the form of a tune picture file, the latter can be calculated by measuring a sample with a known number of spins and running the result through this script.
q-factor, number of spins and the spectrometer transfer factor can all be passed to the script as options:
Passing nspins and/or tfactor to the script determines the operation mode.
 - neither:	calculate normalized double integral
 - nspins:	calculate tfactor from spectrum
 - tfactor:	calculate nspins from spectrum
 - both:	check tfactor against nspins using the given spectrum
Passing q is only useful in two cases:
 - the quality factor has been determined by alternate means
 - the script is used to compare measurements that can be assumed to have identical q

All relevant parameters are printed to stdout as well as saved to a file. Additionally, the script displays the results from fitting, background correction and integration in two plots:
 - tune picture:
   - data blue, fit red/dashed
   - bg fit red/dashed/thin, area used for bg correction shaded
 - spectrum:
   - data blue, first integral green, second integral red
   - blue/green dotted: bg fits, area used for bg correction shaded
   - red dotted: max/min used for determination of double integral
These figures are also by default saved to file.

For a good result it is vitally important that the background corrections and fits used are as good as possible. Always check that the script has achieved a good background fit, especially for the double integration. If not, try messing with the areas used for background correction before messing with the fitting models. A good background correction in the double integration is indicated by a zero first and flat second integral in the shaded areas.


Documentation of the various functions is found within their respective m-files.

CURRENT LIMITATIONS:
 - While the dip is autodetected, this has only been tested for cases where the full tune picture is recorded, i.e. there were flat areas to the left and to the right of the tune pic. Always check if the figure to see if the fit makes sense, try specifying the background area manually if not.
 - the time resolution of the tune file is currently not read and therefore needs to be set to 50us/div. Alternatively you can pass tunepicscaling to the script to correct for this.

THIS SCRIPT IS STRICTLY GIGO: GARBAGE IN, GARBAGE OUT.
If you overmodulate with a badly calibrated modulation amplitude, saturate your sample or, use nonsense background corrections or do other silly stuff, then this script is just a random number generator.

COMMENTS/SUGGESTIONS/BUGS:
christopher.engelhard@fu-berlin.de
