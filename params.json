{"name":"Spincounting","tagline":"A MatLab program for quantitative EPR - current version: v2.0.0","body":"## New version released - v2.0.0\r\n**Major new features**\r\n * full support for Bruker Xepr format\r\n * new interface allows users to easily implement their own data formats\r\n * improved background fitting\r\n * all parameters influencing EPR signal intensity can now be set as options\r\n \r\n**Documentation**\r\n * the README has been extended and brought up-to-date \r\n * toolbox now includes examples, testfiles and templates\r\n\r\nSee the [**Changelog**](changelog.html) for details.\r\n\r\n### **Important note to users of v1.x**\r\n>There have been some changes to the API that require you to update your scripts:\r\n> * tfactor's definition changed (it now follows the definition in [Eaton & Eaton - Quantitative EPR](https://www.springer.com/us/book/9783211929476)). Adapt your old calibration factors according to tfactor_v2 = 1 / tfactor_v2 .\r\n> * the parameter structs intparams and qparams have been replaced by individual options\r\n>   * qparams.background → tunebglimits\r\n>   * qparams.smoothing → tunepicsmoothing\r\n>   * qparams.order → tunebgorder\r\n>   * qparams.dipmodel → dipmodel\r\n>   * intparams.background → intbglimits\r\n>   * intparams.order → intbgorder\r\n> * the default order for background correction during integration is now [1 3]\r\n\r\n## Overview\r\nThis MatLab toolbox is designed to facilitate and automate the evaluation of quantitative EPR data. In can be used both to calibrate an EPR spectrometer for future quantitative measurements and to calculate the number of spins from a spectrum obtained on a calibrated machine.\r\n\r\nAdditionally, when given a file containing a tune picture, it can perform automatic calculation of the quality factor Q.\r\n\r\n## Requirements\r\n * MatLab 2012 or later\r\n * MatLab Curve Fitting Toolbox\r\n * [easyspin](www.easyspin.org)'s eprload() function for import of Bruker Xepr files\r\n\r\n## Versions\r\n### Release Versions\r\nThe current stable release version is v2.0.0. It can be downloaded from the links above. Previous releases are available on the [Releases](https://github.com/lcts/spincounting/releases) page.\r\n\r\n### Development versions\r\nThere are two development versions available:\r\n\r\n * Dev version of the current stable version (v2.0.x). Contains all the latest bugfixes, but might not be entirely stable - Download | [.zip](https://github.com/lcts/spincounting/zipball/master) | [.tar.gz](https://github.com/lcts/spincounting/tarball/master) |\r\n\r\n * Dev version of the current development version (v2.1). Contains all the newest features, but is very untested - Download | [ .zip](https://github.com/lcts/spincounting/zipball/develop) | [.tar.gz](https://github.com/lcts/spincounting/tarball/develop) |\r\n\r\nIf you want to stay up-to-date with development, I suggest you use git:\r\n\r\n`git clone http://github.com/lcts/spincounting` (v2.0.x)\r\n\r\n`git clone http://github.com/lcts/spincounting --branch develop` (v2.1)\r\n\r\n## Installation & first steps\r\nExtract the downloaded archive to any location on your computer, and add that location to your MatLab search path. (In MatLab -> 'Set Path ...' or by editing MatLab's pathdef.m). The toolbox can be invoked by typing 'spincounting' on the MatLab command line. Further information/documentation can be found in the README file and in the functions themselves.\r\n\r\n## Support or Contact\r\nHaving trouble? Questions? Requests? Contact me and I’ll try to help you sort it out.\r\n\r\nAuthor: Christopher Engelhard\r\n\r\nMail: christopher.engelhard [at] fu-berlin.de\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}